// <auto-generated />
using System;
using CocktailPlanner.DataLink;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CocktailPlanner.Migrations
{
    [DbContext(typeof(CocktailPDbContext))]
    [Migration("20230126164943_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CocktailIngredient", b =>
                {
                    b.Property<int>("CocktailsIdCocktail")
                        .HasColumnType("int");

                    b.Property<int>("IngredientsIdIngredient")
                        .HasColumnType("int");

                    b.HasKey("CocktailsIdCocktail", "IngredientsIdIngredient");

                    b.HasIndex("IngredientsIdIngredient");

                    b.ToTable("CocktailIngredient");
                });

            modelBuilder.Entity("CocktailPlanner.Models.Cocktail", b =>
                {
                    b.Property<int>("IdCocktail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCocktail"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("EventPlanIdEvent")
                        .HasColumnType("int");

                    b.Property<byte>("Image")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdCocktail");

                    b.HasIndex("EventPlanIdEvent");

                    b.ToTable("Cocktails");
                });

            modelBuilder.Entity("CocktailPlanner.Models.EventPlan", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvent"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdEvent");

                    b.ToTable("EventPlans");
                });

            modelBuilder.Entity("CocktailPlanner.Models.Ingredient", b =>
                {
                    b.Property<int>("IdIngredient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngredient"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Quantity")
                        .HasMaxLength(255)
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdIngredient");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("CocktailPlanner.Models.Inventory", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItem"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdItem");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("EventPlanInventory", b =>
                {
                    b.Property<int>("EventPlansIdEvent")
                        .HasColumnType("int");

                    b.Property<int>("InventoriesIdItem")
                        .HasColumnType("int");

                    b.HasKey("EventPlansIdEvent", "InventoriesIdItem");

                    b.HasIndex("InventoriesIdItem");

                    b.ToTable("EventPlanInventory");
                });

            modelBuilder.Entity("CocktailIngredient", b =>
                {
                    b.HasOne("CocktailPlanner.Models.Cocktail", null)
                        .WithMany()
                        .HasForeignKey("CocktailsIdCocktail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CocktailPlanner.Models.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsIdIngredient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CocktailPlanner.Models.Cocktail", b =>
                {
                    b.HasOne("CocktailPlanner.Models.EventPlan", null)
                        .WithMany("Cocktails")
                        .HasForeignKey("EventPlanIdEvent");
                });

            modelBuilder.Entity("EventPlanInventory", b =>
                {
                    b.HasOne("CocktailPlanner.Models.EventPlan", null)
                        .WithMany()
                        .HasForeignKey("EventPlansIdEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CocktailPlanner.Models.Inventory", null)
                        .WithMany()
                        .HasForeignKey("InventoriesIdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CocktailPlanner.Models.EventPlan", b =>
                {
                    b.Navigation("Cocktails");
                });
#pragma warning restore 612, 618
        }
    }
}
